spring:
  #  # H2 Setting Info (H2 Console에 접속하기 위한 설정정보 입력)
  #  h2:
  #    console:
  #      enabled: true  # H2 Console을 사용할지 여부 (H2 Console은 H2 Database를 UI로 제공해주는 기능)
  #      path: /h2-console  # H2 Console의 Path
  #  # Database Setting Info (Database를 H2로 사용하기 위해 H2연결 정보 입력)
  #  datasource:
  #    driver-class-name: org.h2.Driver  # Database를 H2로 사용하겠다.
  #    url: jdbc:h2:~/test  # H2 접속 정보
  #    username: sa  # H2 접속 시 입력할 username 정보 (원하는 것으로 입력)
  #    password:  # H2 접속 시 입력할 password 정보 (원하는 것으로 입력)

  datasource:
    url: ${MYSQL_URL}
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        show_sql: true
    database-platform: org.hibernate.dialect.MySQL8Dialect

  cloud:
    gcp:
      storage:
        project-id: ${STORAGE_PROJECT_ID}
        bucket: ${STORAGE_BUCKET}

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  
  data:
     redis:
       host: localhost
       port: 6379
       timeout: 6000

  mail:
     host: smtp.naver.com
     port: 465
     username: ${user_name}
     password: ${my_password}
     properties:
       mail.smtp.auth: true
       mail.smtp.ssl.enable: true

gcp:
  key: classpath:${GCP_STORAGE_KEY}

jwt:
  secret: ${JWT_SECRET}

